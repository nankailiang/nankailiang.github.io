(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{539:function(v,t,l){"use strict";l.r(t);var _=l(7),i=Object(_.a)({},(function(){var v=this,t=v.$createElement,l=v._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"javascript有哪些数据类型-它们的区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#javascript有哪些数据类型-它们的区别"}},[v._v("#")]),v._v(" JavaScript有哪些数据类型，它们的区别？")]),v._v(" "),l("p",[v._v("JavaScript共有八种数据类型，分别是 Undefined、Null、Boolean、Number、String、Object、Symbol、BigInt。")]),v._v(" "),l("p",[v._v("其中 Symbol 和 BigInt 是ES6 中新增的数据类型：")]),v._v(" "),l("ul",[l("li",[v._v("Symbol 代表创建后独一无二且不可变的数据类型，它主要是为了解决可能出现的全局变量冲突的问题。")]),v._v(" "),l("li",[v._v("BigInt 是一种数字类型的数据，它可以表示任意精度格式的整数，使用 BigInt 可以安全地存储和操作大整数，即使这个数已经超出了 Number 能够表示的安全整数范围。")])]),v._v(" "),l("p",[v._v("这些数据可以分为原始数据类型和引用数据类型：")]),v._v(" "),l("ul",[l("li",[v._v("栈：原始数据类型（Undefined、Null、Boolean、Number、String）")]),v._v(" "),l("li",[v._v("堆：引用数据类型（对象、数组和函数）")])]),v._v(" "),l("p",[v._v("两种类型的区别在于存储位置的不同：")]),v._v(" "),l("ul",[l("li",[v._v("原始数据类型直接存储在栈（stack）中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；")]),v._v(" "),l("li",[v._v("引用数据类型存储在堆（heap）中的对象，占据空间大、大小不固定。如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。")])]),v._v(" "),l("p",[v._v("堆和栈的概念存在于数据结构和操作系统内存中，在数据结构中：")]),v._v(" "),l("ul",[l("li",[v._v("在数据结构中，栈中数据的存取方式为先进后出。")]),v._v(" "),l("li",[v._v("堆是一个优先队列，是按优先级来进行排序的，优先级可以按照大小来规定。")])]),v._v(" "),l("p",[v._v("在操作系统中，内存被分为栈区和堆区：")]),v._v(" "),l("ul",[l("li",[v._v("栈区内存由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。")]),v._v(" "),l("li",[v._v("堆区内存一般由开发着分配释放，若开发者不释放，程序结束时可能由垃圾回收机制回收。")])])])}),[],!1,null,null,null);t.default=i.exports}}]);